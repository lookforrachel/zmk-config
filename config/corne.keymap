#include <behaviors/mouse_key_press.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            display-name = "QWERTY";
            bindings = <
&u_grv_esc       &u_mt LC(C) Q  &u_lt 6 W      &kp E               &kp R          &kp T                       &kp Y                     &kp U         &u_lt 5 I     &kp O        &kp P        &u_bspc_at
&u_mt LCTRL TAB  &kp A          &kp S          &u_mt LALT D        &u_mt LGUI F   &kp G                       &kp H                     &u_mt RGUI J  &u_mt RALT K  &kp L        &u_amps_qts  &u_mt RCTRL MINUS
&u_lt 2 HASH     &u_undo_z      &u_mt LG(X) X  &u_mt LG(C) C       &u_paste_v     &u_mt LS(LA(LC(LGUI))) B    &u_mt RS(RA(RC(RGUI))) N  &kp M         &lt 3 COMMA   &u_dot_excl  &kp SLASH    &u_mt RSHIFT EQUAL
                                               &u_sgui_prscn_clpb  &u_lt 4 SPACE  &u_ssh_cw_caps              &u_lt 3 RET               &u_lt 2 BSPC  &kp C_PP
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        COLEMAK {
            display-name = "Colemak";
            bindings = <
&trans  &u_mt LC(C) Q  &u_lt 6 W  &kp F         &kp P          &kp B                       &kp J                     &kp L         &u_lt 5 U      &kp Y   &kp SQT       &trans
&trans  &kp A          &kp R      &u_mt LALT S  &u_mt LGUI T   &kp G                       &kp M                     &u_mt RGUI N  &u_mt RALT E   &kp I   &u_mt AMPS O  &trans
&trans  &trans         &trans     &trans        &u_mt LG(V) D  &u_mt LS(LA(LC(LGUI))) V    &u_mt RS(RA(RC(RGUI))) K  &kp H         &u_lt 3 COMMA  &trans  &trans        &trans
                                  &trans        &trans         &trans                      &trans                    &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        NUM {
            display-name = "Num";
            bindings = <
&kp LGUI    &kp LBKT   &kp N7  &kp N8  &kp N9     &kp RBKT     &kp LPAR  &kp RPAR  &kp UP    &none      &bootloader  &kp DEL
&caps_word  &kp SEMI   &kp N4  &kp N5  &kp N6     &kp EQUAL    &kp PLUS  &kp LEFT  &kp DOWN  &kp RIGHT  &kp RSHFT    &kp RCTRL
&to 3       &kp GRAVE  &kp N1  &kp N2  &kp N3     &kp SLASH    &to 4     &to 5     &to 6     &kp DOT    &trans       &trans
                               &kp N0  &kp SPACE  &kp MINUS    &kp RET   &to 0     &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(LS(Z)) LG(Z)>;
        };

        SYM {
            display-name = "Sym";
            bindings = <
&kp LGUI  &kp BSLH   &kp AMPS  &kp ASTRK     &kp LPAR      &kp RPAR     &u_macro_sq_bkt  &kp LBKT  &kp C         &kp RBKT  &bootloader  &kp DEL
&kp CAPS  &kp COLON  &kp DLLR  &kp PRCNT     &kp CARET     &kp PLUS     &u_macro_c_bkt   &kp LBRC  &u_macro_grv  &kp RBRC  &kp DQT      &kp RCTRL
&to 4     &kp TILDE  &kp EXCL  &kp AT        &kp HASH      &kp PIPE     &u_macro_bkt     &kp LPAR  &kp SEMI      &kp RPAR  &kp QMARK    &trans
                               &u_macro_sqt  &u_macro_dqt  &kp UNDER    &kp RET          &to 0     &trans
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        NAV {
            display-name = "Nav";
            bindings = <
&kp LGUI  &bootloader  &none             &kp LA(LS(UP))    &none              &none            &none     &none     &kp UP    &none      &kp LA(LG(LEFT))  &kp BACKSPACE
&trans    &none        &kp LA(LS(LEFT))  &kp LA(LS(DOWN))  &kp LA(LS(RIGHT))  &kp PAGE_UP      &kp HOME  &kp LEFT  &kp DOWN  &kp RIGHT  &none             &u_mt RG(RALT) RG(RA(ENTER))
&to 5     &kp LSHIFT   &kp LCTRL         &kp LALT          &kp LGUI           &kp PAGE_DOWN    &kp END   &kp RGUI  &kp RALT  &kp RCTRL  &kp RSHIFT        &u_caps_word
                                         &kp END           &none              &none            &kp RET   &to 0     &trans
            >;

            sensor-bindings = <&inc_dec_kp TAB LS(TAB)>;
        };

        MEDIA {
            display-name = "Media";
            bindings = <
&none  &bootloader  &none  &none  &none  &none    &u_out_tog         &kp C_MUTE   &kp C_VOL_UP  &kp C_VOL_UP  &none        &none
&none  &none        &none  &none  &none  &none    &ext_power EP_TOG  &kp C_PREV   &kp C_VOL_DN  &kp C_NEXT    &none        &none
&to 6  &none        &none  &none  &none  &none    &u_bt_sel_0        &u_bt_sel_1  &u_bt_sel_2   &u_bt_sel_3   &u_bt_sel_4  &none
                           &none  &none  &none    &kp C_PLAY_PAUSE   &to 0        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        FUN {
            display-name = "Fun";
            bindings = <
&none  &bootloader            &trans              &kp LG(LS(N4))  &kp LG(LC(LS(N4)))  &kp LG(LC(LS(NUMBER_3)))    &kp LG(LS(N3))  &kp F7  &kp F8  &kp F9  &kp F12  &bootloader
&none  &u_macro_string_ctask  &u_macro_email_wrk  &u_macro_email  &u_macro_copy_all   &u_macro_cut_all            &none           &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &trans                 &kp LC(K)           &kp LC(Y)       &trans              &trans                      &none           &kp F1  &kp F2  &kp F3  &kp F10  &none
                                                  &none           &none               &none                       &none           &to 0   &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_INC C_BRI_DEC>;
        };
    };

    combos {
        compatible = "zmk,combos";

        u_combo_to_base {
            bindings = <&to 1>;
            key-positions = <10 11>;
        };

        u_combo_esc {
            bindings = <&kp ESC>;
            key-positions = <24 35>;
        };

        u_combo_to_extra {
            bindings = <&to 0>;
            key-positions = <23 22>;
        };

        u_combo_zoom {
            bindings = <&u_macro_app_zoom>;
            key-positions = <6 7>;
        };

        u_combo_zoom_mic {
            bindings = <&u_macro_app_zoom_mic>;
            key-positions = <18 19>;
        };

        u_combo_zoom_end {
            bindings = <&u_macro_app_close_window>;
            key-positions = <1 10>;
        };

        u_combo_to_num {
            bindings = <&to 2>;
            key-positions = <28 29>;
        };

        u_combo_search_selected {
            bindings = <&u_macro_search_selected>;
            key-positions = <16 17>;
        };
    };

    macros {
        u_macro_u_bt_sel_0: u_macro_u_bt_sel_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
        };

        u_macro_u_bt_sel_1: u_macro_u_bt_sel_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
        };

        u_macro_u_bt_sel_2: u_macro_u_bt_sel_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
        };

        u_macro_u_bt_sel_3: u_macro_u_bt_sel_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
        };

        u_macro_u_bt_sel_4: u_macro_u_bt_sel_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
        };

        u_macro_btn1: u_macro_btn1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&kp KP_SLASH &kp KP_N5>;
        };

        u_macro_btn2: u_macro_btn2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&kp KP_MINUS &kp KP_N5>;
        };

        u_macro_btn3: u_macro_btn3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&kp KP_ASTERISK &kp KP_N5>;
        };

        u_macro_email_wrk: u_macro_email_wrk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp Y &kp E &kp E &kp AT &kp H &kp E &kp A &kp L &kp T &kp H &kp F &kp I &kp R &kp S &kp T &kp DOT &kp O &kp R &kp G>;
        };

        u_macro_email: u_macro_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp L &kp O &kp O &kp K &kp F &kp O &kp R &kp DOT &kp R &kp A &kp C &kp H &kp E &kp L &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };

        u_macro_string_ctask: u_macro_string_ctask {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(S) &kp E &kp R &kp V &kp E &kp R &kp L &kp E &kp S &kp S &kp SPACE &kp LS(C) &kp LS(D) &kp SPACE &kp D &kp E &kp P &kp L &kp O &kp Y &kp SPACE>;
        };

        u_macro_app_zoom: u_macro_app_zoom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(LC(LS(Z))))>;
        };

        u_macro_app_zoom_mic: u_macro_app_zoom_mic {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&u_macro_app_zoom &kp LG(LS(A))>;
        };

        u_macro_app_close_window: u_macro_app_close_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(W) &kp ENTER>;
            wait-ms = <500>;
        };

        u_macro_string_ryee: u_macro_string_ryee {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp R &kp Y &kp E &kp E>;
        };

        u_macro_string_name: u_macro_string_name {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(R) &kp A &kp C &kp H &kp E &kp L &kp SPACE &kp LS(Y) &kp E &kp E>;
        };

        u_macro_cut_all: u_macro_cut_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(A) &kp LG(X)>;
        };

        u_macro_copy_all: u_macro_copy_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(A) &kp LG(C)>;
        };

        u_macro_bkt: u_macro_bkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
        };

        u_macro_sq_bkt: u_macro_sq_bkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        };

        u_macro_c_bkt: u_macro_c_bkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
        };

        u_macro_angled_brackets: u_macro_angled_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp GT &kp LEFT>;
        };

        u_macro_dqt: u_macro_dqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT &kp LEFT>;
        };

        u_macro_sqt: u_macro_sqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SQT &kp LEFT>;
        };

        u_macro_grv: u_macro_grv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
        };

        u_macro_search_selected: u_macro_search_selected {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C) &kp LG(F) &kp LG(V)>;
        };
    };

    behaviors {
        u_bt_sel_0: u_bt_sel_0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&u_macro_u_bt_sel_0>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt_sel_1: u_bt_sel_1 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&u_macro_u_bt_sel_1>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt_sel_2: u_bt_sel_2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&u_macro_u_bt_sel_2>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt_sel_3: u_bt_sel_3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3>, <&u_macro_u_bt_sel_3>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt_sel_4: u_bt_sel_4 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4>, <&u_macro_u_bt_sel_4>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_out_tog: u_out_tog {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_caps_word: u_caps_word {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_to_U_BASE: u_to_U_BASE {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 1>;
        };

        u_to_U_EXTRA: u_to_U_EXTRA {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 0>;
        };

        u_to_U_TAP: u_to_U_TAP {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 0>;
        };

        u_to_U_BUTTON: u_to_U_BUTTON {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 0>;
        };

        u_to_U_NAV: u_to_U_NAV {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 5>;
        };

        u_to_U_MOUSE: u_to_U_MOUSE {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 0>;
        };

        u_to_U_MEDIA: u_to_U_MEDIA {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 6>;
        };

        u_to_U_NUM: u_to_U_NUM {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 3>;
        };

        u_to_U_SYM: u_to_U_SYM {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 4>;
        };

        u_to_U_FUN: u_to_U_FUN {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 0>;
        };

        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        u_comma_inner_morph: u_comma_inner_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN>, <&kp LEFT_BRACE>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        u_comma_morph: u_comma_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&u_comma_inner_morph>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_skq: u_sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };

        u_ssh_capw: u_sticky_shift_capw {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&u_skq LSHFT>, <&u_caps_word>;

            tapping-term-ms = <200>;
        };

        u_sgui_prscn_clpb: u_sgui_prscn_clpb {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&u_skq LGUI>, <&kp LG(LS(LC(N4)))>;

            tapping-term-ms = <200>;
        };

        u_ssh_cw_caps: u_ssh_cw_caps {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&u_ssh_capw>, <&kp CAPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_cpp: u_cpp {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&kp C_PP>;
        };

        u_lt_cpp: u_lt_cpp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&u_cpp>;
        };

        u_dot_excl: u_dot_excl {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;
        };

        u_amps_qts: u_amps_qts {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp AMPS>;
        };

        u_grv_esc: u_grv_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "U_GRV_ESC";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp ESC>;
        };

        u_bspc_at: u_bspc_at {
            compatible = "zmk,behavior-tap-dance";
            label = "U_BSPC_AT";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp AT>;
        };

        u_undo_z: u_undo_z {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp LG(Z)>;
        };

        u_paste_v: u_paste_v {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp LG(V)>;
        };
    };
};
